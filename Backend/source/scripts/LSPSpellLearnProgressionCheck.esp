Scriptname LSPSpellLearnProgressionCheck Extends ReferenceAlias
{Main script for the LSPSpellLearnProgressionCheck system}

FormList Property LSPMasterTomesList  Auto
{An unordered list of all spell tomes supported by the Linear Spell Progression system.
This script WILL remove forms from this list. You have been warned!}
FormList Property LSPMasterList  Auto
{The list of many lists}
;/
  ========================|                |=========================
  ========================|     Format     |========================
  ========================|                |=========================

  LSPMasterList
  |
   \
    |----- Requirements List (repeatable)
     \
      | ----- Tomes (0)
       \
        | ----- Spell Tome: Spell1 (0)
        | ----- Spell Tome: Spell2 (1)
      | ----- Spells (1)
       \
        | ----- Spell1 (0)
        | ----- Spell2 (1)
      | ----- Requirements (2)
       \
        | ----- Spell1's Requirements List (0)
         \
          | ----- SomeOtherSpell (repeatable)
        | ----- Spell2's Requirements List (1)
         \
          | ----- SomeOtherSpell (repeatable)
/;

Message Property asMessageTextNoSKSE  Auto
{Message to display when a spell's requirements are not met
Only used when SKSE is **not** present!}

String Property asMessageTextSKSE  Auto
{Text to display when a spell's requirements are not met
Unfulfilled requirements are seperated by line breaks and appended to the end of the message.
The first occurance of %s% will be replaced with the spell's name.}

Actor actorAliasRef
Bool UseSKSE

Event OnInit()
    AddInventoryEventFilter(LSPMasterTomesList)
    actorAliasRef = GetReference() as Actor ; I know GetActor() exists, and I don't care
    UseSKSE = SKSE.GetVersionRelease() && SKSE.GetVersionRelease() == skse.GetScriptVersionRelease()
EndEvent

Event OnItemRemoved(Form akBaseItem, int aiItemCount, ObjectReference akItemReference, ObjectReference akDestContainer)
    ;FormList iList = LSPMasterList
    Int i = 0
    Int iMax = LSPMasterList.GetSize()

    while i < iMax ; iMax will always be the highest index, plus 1
        FormList curList = LSPMasterList.GetAt(i) as FormList
        FormList curTomes = LSPMasterList.GetAt(0) as FormList
        Int curSpellIndex = curTomes.Find(akBaseItem)

        if curSpellIndex != -1 && actorAliasRef.HasSpell((LSPMasterList.GetAt(1) as FormList).GetAt(curSpellIndex) as Spell) ; If it's in the tome list, check for its requirements
            FormList curRequirementsList = (LSPMasterList.GetAt(2) as FormList).GetAt(curSpellIndex) as FormList
            Int j = 0
            Int jMax = curRequirementsList.GetSize()

            Bool doRemoveSpell = false

            if UseSKSE
                Form[] listOfSpells = curRequirementsList.ToArray()
                String[] spellNames
                while j < jMax
                    if !actorAliasRef.HasSpell(listOfSpells[j])
                        spellNames[j] = listOfSpells[j].GetName()
                        doRemoveSpell = true
                    EndIf
                    j += 1
                EndWhile

                if doRemoveSpell
                    Int namePos = StringUtil.Find(asMessageTextSKSE, "%s%")
                    String constructionMsg = StringUtil.Substring(asMessageTextSKSE, namePos) + (LSPMasterList.GetAt(1) as FormList).GetAt(curSpellIndex).GetName() + StringUtil.Substring(asMessageTextSKSE, StringUtil.GetLength(asMessageTextSKSE) - (namePos + 3), namePos + 3)
                    j = 0
                    jMax = spellNames.Length
                    while j < jMax
                        constructionMsg = constructionMsg + "\n" + spellNames[j]
                        j += 1
                    EndWhile
                    Debug.MessageBox(constructionMsg)
                EndIf

            else
                while j < jMax
                    Form curRequirement = curRequirementsList.GetAt(j)
                    if !actorAliasRef.HasSpell(curRequirement)
                        asMessageTextNoSKSE.Show()
                        doRemoveSpell = true
                        j = jMax
                    else
                        j += 1
                    EndIf
                EndWhile
            endif

            if doRemoveSpell
                actorAliasRef.RemoveSpell((LSPMasterList.GetAt(1) as FormList).GetAt(curSpellIndex) as Spell)    
            else
                ; Prevent further events for this tome
                LSPMasterTomesList.RemoveAddedForm(curTomes.GetAt(curSpellIndex)) 
                RemoveAllInventoryEventFilters()
                AddInventoryEventFilter(LSPMasterTomesList)
            EndIf
            i = iMax
        else
            i += 1
        EndIf
    endWhile
EndEvent
